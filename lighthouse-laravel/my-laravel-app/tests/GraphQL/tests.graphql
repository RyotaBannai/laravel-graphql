#mutation{
#    updateUser(
#        id: 1,
#        name: "Ryota Bannai!"
#    )
#    {
#        id
#        name
#    }
#    createPost(input: { title: "My new Post", content:"New Post!!", author: { connect: 1 } }) {
#        id
#        user {
#            name
#        }
#    }
#}

#query {
#    posts2(first: 10){
#    posts2(first: 10, page:2){
#        ...PostPagenationPragment
#        ...PostFragment
#    }
#    users(first: 5){
#        ...UserPagenationPragment
#        ...UserFragment
#    }

#    postDense2(where: { column: CATEGORY, operator: EQ, value: "U.S."}) {
#        id
#        title
#        content
#    }
#    postDense2(where: {
#        AND:[
#            {column: CATEGORY, operator: EQ, value: "Politics"}
#            {
#                OR : [
#                    {column: TITLE, operator: LIKE, value: "%White%"}
#                ]
#            }
#        ]
#    })

#    postDense(title: "%Alice%")
#    {
#        id
#        title
#        content
#    }

#    postDense3(hasComments: {
#        AND:[
#            {column: TARGET_TYPE , operator: EQ, value: "App\\Models\\Post"}
#            {column: DELETED_AT , operator: IS_NOT_NULL } # IS_NULL works as well.
#        ]
#    })
#    {
#        id
#        title
#        content
#        comments {
#            reply
#            deleted_at
#        }
#    }
#}



#fragment UserFragment on UserPaginator {
#    data{
#        id
#        name
#    }
#}
#
#fragment UserPagenationPragment on UserPaginator {
#    paginatorInfo{
#        currentPage
#        lastPage
#    }
#}


#fragment PostFragment on PostPaginator {
#    data{
#        id
#        content
#        category
#    }
#}
#
#fragment PostPagenationPragment on PostPaginator {
#    paginatorInfo{
#        currentPage
#        lastPage
#    }
#}

#query{
#    hello
#    postDense(title: "but"){
#        id
#        content
#        category
#    }
#}
# come back later

