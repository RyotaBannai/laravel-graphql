type Post {
    id: ID!
    title: String!
    content: String!
    category: String!
    #author: User! @belongsTo
    user: User! @belongsTo(relation: "author")  # accepts different method name
    comments: [Comment!]! @morphMany
}

input CreatePostInput {
    title: String!
    content: String!
    author: CreateUserBelongsTo
}

input CreateUserBelongsTo {
    connect: ID
    create: CreateUserInput
    update: UpdateUserInput
    upsert: UpsertUserInput
}

input CreateUserInput {
    name: String!
}

input UpdateUserInput {
    id: ID!
    name: String!
}

input UpsertUserInput {
    id: ID!
    name: String!
}

extend type Query {
    posts: [Post!]! @all
    posts2: [Post!]! @paginate
    post(id: Int! @eq): Post @find
    postDense(
        title: String! @where(operator: "%LIKE%")
    ): [Post!]! @all
}

extend type Mutation {
    createPost(input: CreatePostInput! @spread): Post @create
}
